/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  IntegrationTest as PrismaIntegrationTest,
} from "@prisma/client";

export class IntegrationTestServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.IntegrationTestCountArgs, "select">
  ): Promise<number> {
    return this.prisma.integrationTest.count(args);
  }

  async integrationTests(
    args: Prisma.IntegrationTestFindManyArgs
  ): Promise<PrismaIntegrationTest[]> {
    return this.prisma.integrationTest.findMany(args);
  }
  async integrationTest(
    args: Prisma.IntegrationTestFindUniqueArgs
  ): Promise<PrismaIntegrationTest | null> {
    return this.prisma.integrationTest.findUnique(args);
  }
  async createIntegrationTest(
    args: Prisma.IntegrationTestCreateArgs
  ): Promise<PrismaIntegrationTest> {
    return this.prisma.integrationTest.create(args);
  }
  async updateIntegrationTest(
    args: Prisma.IntegrationTestUpdateArgs
  ): Promise<PrismaIntegrationTest> {
    return this.prisma.integrationTest.update(args);
  }
  async deleteIntegrationTest(
    args: Prisma.IntegrationTestDeleteArgs
  ): Promise<PrismaIntegrationTest> {
    return this.prisma.integrationTest.delete(args);
  }
}
